{{ range "router/nginx" | ls }}
{{ .Key }} {{ .Value }};{{ end }}

events {
  {{ range "router/nginx/events" | ls }}
  {{ .Key }} {{ .Value }};{{ end }}
}

http {
  {{ range "router/nginx/http" | ls }}
  {{ .Key }} {{ .Value }};{{ end }}

	{{ $controller := service "api-controller" }}
	{{ $launcher := service "api-launcher"}}
	{{if $controller }}
	upstream api-controller {
		  {{ range $controller }}
		  server {{ .Address }}:{{ .Port }};
		  {{ end }}
	}
	{{end}}

	{{if $launcher }}
	upstream api-launcher {
		   {{ range $launcher }}
		   server {{ .Address }}:{{ .Port }};
		   {{ end }}
	}
	{{ end }}
	{{ if or $controller $launcher}}
	server {
		  listen 80;
		  server_name cde.{{key "cde/platform/domain"}};
		  {{if $controller }}
		  location /controller {
			proxy_pass http://api-controller/controller;
			proxy_set_header Host            $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		  }
		  {{ end }}
		  {{if $launcher }}
		  location /launcher {
			proxy_pass http://api-launcher/launcher;
			proxy_set_header Host            $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		  }
		  {{ end }}
	}
	{{ end }}

	{{if service "marathon"}}
	upstream "marathon" {
		  {{ range $service := service "marathon" }}
		  server {{ .Address }}:{{ .Port }};
		  {{ end }}
	}
	server {
			listen 80;
			server_name marathon.{{key "cde/platform/domain"}};
			location / {
				  proxy_pass http://marathon;
				  proxy_set_header Host            $host;
				  proxy_set_header X-Real-IP $remote_addr;
				  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			}
	}
	{{ end }}
	  {{ if service "leader.mesos" }}
	  upstream mesos {
		{{ range $service := service "leader.mesos" }}
					server {{ .Address }}:{{ .Port }};
			{{ end }}
	  }
	  server {
			  listen 80;
			  server_name mesos.{{key "cde/platform/domain"}};
			  location / {
					proxy_pass http://mesos;
					proxy_set_header Host            $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			  }
	  }
	  {{ end }}

	  {{ if service "consul" }}
		upstream consul {
			{{ range $service := service "consul" }}
				server {{ .Address }}:8500;
			{{ end }}
		}
		server {
			listen 80;
			server_name consul.{{key "cde/platform/domain"}};
			location / {
			  proxy_pass http://consul;
			  proxy_set_header Host            $host;
			  proxy_set_header X-Real-IP $remote_addr;
			  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			}
		}
	  {{ end }}

  {{ plugin "server_generator" }}

}

{{ $git := service "git"}}
{{ if $git }}
stream {
	upstream git {
		{{ range $git }}
		server {{.Address}}:{{.Port}};
		{{ end }}
	}

	server {
		listen 2222;
		proxy_connect_timeout  "10000";
		proxy_timeout          "1200000";
		proxy_pass git;
	}
}
{{end}}
