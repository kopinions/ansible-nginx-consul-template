{{ range "router/nginx" | ls }}
{{ .Key }} {{ .Value }};{{ end }}

events {
  {{ range "router/nginx/events" | ls }}
  {{ .Key }} {{ .Value }};{{ end }}
}

http {
  {{ range "router/nginx/http" | ls }}
  {{ .Key }} {{ .Value }};{{ end }}

  {{ range $service := services }}
    {{ if not (in ("mesos-consul,consul,builder"|split ",") $service.Name) }}
        {{ range .Tags }}
            upstream {{ $service.Name }}_{{ . }} {
                {{ with $service_tag := printf "%s.%s" . $service.Name }}{{ range service $service_tag }}
                server {{ .Address }}:{{ .Port }};{{ end }} {{ end }}
              }
        {{ else }}
            upstream {{ $service.Name }} {
                {{ range service $service.Name }}
                server {{ .Address }}:{{ .Port }};{{ end }}
            }
        {{ end }}
    {{ end }}
  {{ end }}



  {{ range $service := services }}
    {{ if not (in ("mesos-consul,consul,builder"|split ",") $service.Name) }}
        {{ range .Tags }}
          server {
            listen 80;
            server_name {{ . }}.{{ $service.Name }}.{{key "router/domain"}};
            location / {
              proxy_pass http://{{ $service.Name }}_{{ . }}/;
            }
          }
        {{ else }}
          server {
            listen 80;
            server_name {{ $service.Name }}.{{key "router/domain"}};
            location / {
              proxy_pass http://{{ $service.Name }}/;
            }
          }
        {{ end }}
    {{ end }}
  {{ end }}

    {{ range $key, $pairs := tree "routes"| byKey }}{{$domain := $key}}{{ range $pathKey, $pathPairs := tree (printf "%s/%s" "routes" $domain) | byKey }}
    {{$route := $pathKey|replaceAll ":" "/"}}{{$proxy_pass := printf "%s_%s" ($domain|replaceAll "." "_") ($route|replaceAll "/" "_")}}{{if ((printf "routes/%s/%s/" $domain $pathKey) | plugin "myplugin") | eq "true" }}
    upstream {{$proxy_pass}} { {{range $pair := $pathPairs }}{{$app := .Key}}{{ range $service := services }}{{ if $service.Name | eq $app }}{{ range service $service.Name }}
        server {{.Address}}:{{.Port}};{{ end }}{{end}}{{end}}{{end}}
    }
    server {
       listen 80;
       server_name {{$domain}};
       location /{{$route }} {
         proxy_pass http://{{$proxy_pass}}/{{$route}};
       }
    } {{end}}{{end}}{{end}}

}

stream {
    {{range service "builder"}}
    upstream builder {
        server {{.Address}}:{{.Port}};
    }

    server {
        listen 2222;
        proxy_connect_timeout  "10000";
        proxy_timeout          "1200000";
        proxy_pass builder;
    }
    {{end}}
}
